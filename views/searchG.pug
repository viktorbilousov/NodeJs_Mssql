extends layout

block script
        script.
            window.onload = function () {

                let artikelArtSelector =  document.getElementById("artikelArtSelector-geraet");
                let artikelSelector = document.getElementById("artikelSelector-geraet");
                let zustandSelector = document.getElementById("zustandSelector");
                let idInput =          document.getElementById("geraeteId");
                let lagerInput = document.getElementById('lager')

                let artikelArr = JSON.parse(`!{table.artikel_join}`);

                artikelSelector.disabled = true;

                let aaCB = document.getElementById('artikelArtSelector-geraet-checkbox');
                let aCB = document.getElementById('artikelSelector-geraet-checkbox');
                let zCB = document.getElementById('zustandSelector-checkbox');
                let idCB = document.getElementById('geraeteId-checkbox');
                let lCB = document.getElementById('lager-checkbox');

                let createAASelect = function (artikelSelector, value) {
                    while (artikelSelector.options.length !== 0) {
                        artikelSelector.options.remove(0);
                    }

                    artikelSelector.options[artikelSelector.options.length] = new Option("unselected", '')
                    for (const set of artikelArr) {
                        if (set['ARTIKEL_ART_NAME'] === value) {
                            artikelSelector.options[artikelSelector.options.length] = new Option(set['ARTIKEL_NAME'], set['ARTIKEL_NAME'])
                        }
                    }
                }



                artikelArtSelector.disabled = !idCB.checked;
                zustandSelector.disabled = !zCB.checked;
                idInput.disabled = !idCB.checked;
                lagerInput.disabled  = !lCB.checked;



                let addListener = function (CB, Input) {
                    CB.addEventListener('change', function () {
                        if (CB.checked) {
                            Input.setAttribute("required", "")
                            Input.attributes.required = true;
                            Input.disabled = false;
                        } else {
                            Input.removeAttribute("required")
                            Input.attributes.required = false;
                            Input.disabled = true;
                        }
                    })
                }

                lCB.addEventListener('change', function () {
                        lagerInput.disabled = !lCB.checked;
                })

                aCB.addEventListener('change', function () {
                    if(aCB.checked) {
                        aaCB.checked = false;
                    }
                })
                aaCB.addEventListener('change', function () {
                    if (aaCB.checked) {
                        aCB.checked = false;
                    }
                })

                idCB.addEventListener("change", function () {

                    aaCB.disabled = idCB.checked;
                    aCB.disabled = idCB.checked;
                    zCB.disabled = idCB.checked;
                    lCB.disabled = idCB.checked;

                })

                createAASelect(artikelSelector, artikelArtSelector.value);

                artikelArtSelector.addEventListener("change", function () {
                    createAASelect(artikelSelector, artikelArtSelector.value);
                    aCB.checked = false;
                    aCB.disabled = artikelArtSelector.value === 'unselected';
                });

                addListener(aaCB, artikelArtSelector);
                addListener(aCB, artikelSelector);
                addListener(zCB, zustandSelector);
                addListener(idCB, idInput);

            };

block content
    form(method='POST' action='/searchG')

        input#artikelArtSelector-geraet-checkbox.form-control(type='checkbox' name='artikelArtCB')
        label(for='artikelArtSelector-geraet') ARTIKEL ART:
            select#artikelArtSelector-geraet(name = 'artikelArt')
                option(value="")  unselected
                each item in table.artikelArt
                    option=item
        br

        input#artikelSelector-geraet-checkbox.form-control(type='checkbox' name='artikelCB')
        label(for='artikelSelector-geraet') ARTIKEL:
            select#artikelSelector-geraet(name = 'artikelName')
        br

        input#zustandSelector-checkbox.form-control(type='checkbox' name='zustandCB')
        label(for='zustandSelector') Zustand:
            select#zustandSelector(name = 'zustandName')
                option(value="") unselected
                each item in table.zustandName
                    option=item
        br

        input#geraeteId-checkbox.form-control(type='checkbox' name='geraeteIdCB')
        label(for='geraeteId') Geraet ID:
        input#geraeteId.form-control(type='text' placeholder='Geraet ID' name='geraetID' )
        br

        input#lager-checkbox.form-control(type='checkbox' name='lagerCB')
        label(for='lager') Vorhanden auf der Lager:
        input#lager.form-control(type='checkbox' placeholder="Vorhandensein" name='isAufLager')
        br

        button.btn.btn-primary(type='submit') Search

        div.main-table
            table
                tr
                each th_text in head
                    th=th_text

                -var length = typeof values === 'undefined' ? 0 : values.length;
                -for(let i = 0; i<length; i++)
                    tr
                    each td_text in values[i]
                        td=td_text